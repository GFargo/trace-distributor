sudo: true
dist: xenial
language:
  - node_js
  - python
node_js:
  - 11.6
python:
  - "3.5"
notifications:
  email:
    on_success: change
    on_failure: always
cache:
  - pip
install:
  - pip install --user awscli
before_script:
  - git submodule update --init --recursive
  - yarn
script:
  - yarn lint
  - yarn test
  - yarn build
deploy:
  - provider: s3
    on:
      branch: 'develop'
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    region: $AWS_DEFAULT_REGION
    bucket: trace-regulator-dev
    skip_cleanup: true
    local_dir: build
    cache_control: "max-age=21600"

  - provider: s3
    on:
      branch: 'master'
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    region: $AWS_DEFAULT_REGION
    bucket: trace-regulator-qa
    skip_cleanup: true
    local_dir: build
    cache_control: "max-age=21600"

after_deploy:
  # TODO put this all in a script so we dont invalidate both distros
  # Allow `awscli` to make requests to CloudFront.
  - aws configure set preview.cloudfront true
  # Invalidate every object in the targeted distributions.
  - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_DEV_ID --paths "/*"
  - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_QA_ID --paths "/*"
